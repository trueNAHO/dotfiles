# tmux is a terminal multiplexer: it enables a number of terminals to be
# created, accessed, and controlled from a single screen. tmux may be detached
# from a screen and continue running in the background, then later reattached.

# Heavily inspired by: https://thevaluable.dev/tmux-config-mouseless/

# Without this setting `neovim`s `checkhealth` produces the following: "WARNING:
# Neither Tc nor RGB capability set. True colors are disabled. `termguicolors`
# won't work properly. ADVICE: Put this in your ~/.tmux.conf and replace XXX
# by your $TERM outside of tmux: set-option -sa terminal-overrides ',XXX:RGB'"
set-option -as terminal-overrides ",${TERM}:RGB"

# Set the base index from which an unused index should be searched when a new
# window is created. The default is zero.
set-option -g base-index 1

# @url https://wiki.archlinux.org/title/tmux
# Start a non-login shell.
set-option -g default-command "${SHELL}"

# Set the amount of time for which status line messages and other on-screen
# indicators are displayed. If set to 0, messages and indicators are displayed
# until a key is pressed.  time is in milliseconds.
set-option -g display-time 4000

# @url https://github.com/neovim/neovim/wiki/FAQ
# `ESC` in tmux or GNU Screen is delayed. This is a common problem in tmux or
# screen (see also tmux/#131). The corresponding timeout needs to be tweaked to
# a low value (10-20ms).
set-option -g escape-time 10

# `neovim`s `autoread` feature may not work if `focus-events` is not enabled.
set-option -g focus-events on

# Set the maximum number of lines held in window history. This setting applies
# only to new win‐ dows - existing window histories are not resized and retain
# the limit at the point they were created.
set-option -g history-limit 100000

# Use vi or emacs-style key bindings in copy mode. The default is emacs, unless
# VISUAL or EDITOR contains ‘vi’.
set-option -g mode-keys vi

# If on, tmux captures the mouse and allows mouse events to be bound as key
# bindings. See the MOUSE SUPPORT section for details.
set-option -g mouse on

# Like base-index, but set the starting index for pane numbers.
set-option -g pane-base-index 1

# Use vi or emacs-style key bindings in the status line, for example at the
# command prompt.  The default is emacs, unless the VISUAL or EDITOR environment
# variables are set and contain the string ‘vi’.
set-option -g status-keys vi

# Set the position of the status line.
set-option -g status-position top

# @url https://wiki.archlinux.org/title/Tmux
# Update the `TERM` variable of the terminal emulator when creating a new
# session or attaching an existing session.
set-option -g update-environment \
    "DISPLAY SSH_ASKPASS SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY TERM"

# @url https://wiki.archlinux.org/title/Tmux
# Determine if we should enable 256-colour support.
%if "[[ ${TERM} =~ 256color || ${TERM} == fbterm ]]"
    set-option -g default-terminal tmux-256color
%else
    set-option -g default-terminal tmux
%endif

# Set the key accepted as a prefix key. In addition to the standard keys
# described under KEY BINDINGS, prefix can be set to the special key ‘None’ to
# set no prefix.
unbind-key C-b
set-option -g prefix C-Space

# A window may be split into panes using the split-window command. Swap the
# behaviour of `"` and `%`.
unbind-key %
unbind-key '"'
bind-key -N "Split window horizontally" % split-window -v -c \
    "#{pane_current_path}"
bind-key -N "Split window vertically" '"' split-window -h -c \
    "#{pane_current_path}"

# Make pane target-pane the active pane in its window. If one of -D, -L, -R, or
# -U is used, respec‐ tively the pane below, to the left, to the right, or above
# the target pane is used. -Z keeps the win‐ dow zoomed if it was zoomed. -l is
# the same as using the last-pane command. -e enables or -d dis‐ ables input to
# the pane. -T sets the pane title.
unbind-key C-h
unbind-key C-j
unbind-key C-k
unbind-key C-l
bind-key -N "Select the pane to the left of the active pane" C-h select-pane -L
bind-key -N "Select the pane above to active pane" C-j select-pane -D
bind-key -N "Select the pane below to active pane" C-k select-pane -U
bind-key -N "Select the pane to the right of the active pane" C-l select-pane -R

# Resize a pane, up, down, left or right by adjustment with -U, -D, -L or -R, or
# to an absolute size with -x or -y. The adjustment is given in lines or columns
# (the default is 1); -x and -y may be a given as a number of lines or columns
# or followed by ‘%’ for a percentage of the window size (for ex‐ ample ‘-x
# 10%’). With -Z, the active pane is toggled between zoomed (occupying the whole
# of the win‐ dow) and unzoomed (its normal position in the layout).
unbind-key M-h
unbind-key M-j
unbind-key M-k
unbind-key M-l
bind-key -r -N "Resize the pane left by 5" M-h resize-pane -R 5
bind-key -r -N "Resize the pane down by 5" M-j resize-pane -D 5
bind-key -r -N "Resize the pane up by 5" M-k resize-pane -U 5
bind-key -r -N "Resize the pane right by 5" M-l resize-pane -L 5

# Begin selection in copy mode with `v`.
unbind-key -T copy-mode-vi v
bind-key -T copy-mode-vi v send-keys -X begin-selection

# Copy pipe and cancel in copy mode with `y`.
unbind-key -T copy-mode-vi y
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel --clipboard"

# Soothing pastel theme for tmux.
set -g @plugin 'catppuccin/tmux'

# Initialize TMUX plugin manager (keep this at the very bottom of this config
# file).
set -g @plugin 'tmux-plugins/tpm'
run '~/.config/tmux/plugins/tpm/tpm'
