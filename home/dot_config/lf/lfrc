################################################################################
#                                     set
################################################################################

# Options to customize the behavior. The `:` character is used as the separator
# for list options `[]int` and `[]string`.
set hidden
#set icons
set relativenumber

################################################################################
#                                     map
################################################################################

# Remove the current file or selected file(s).
map D delete

# Open a drag and drop source for X.
map gd %dragon-drop --all --and-exit $fx

# Elaborate `dragon-drop --all --and-exit --target` command to open a drag and
# drop target for X. Transferring data works for anything supported by the
# `curl` command.
map gi ${{
    # Prompt for a filename until certain criteria are met. The filename must be
    # a valid string and may overwrite on confirmation.
    assure_filename() {
        filename="$(get_filename)"

        while
            [[ -z "$filename" ]] ||
                ([[ -e "$filename" ]] && ! yes_or_no "Overwrite $filename?")
        do
            filename="$(get_filename)"
        done

        printf '%s\n' "$filename"
    }

    # Prompt for a filename and print it. The initial prompt text is set to
    # `input_basename`.
    get_filename() {
        read -er -p "Save $input as: " -i "$input_basename" reply
        printf '%s\n' "$reply"
    }

    # Prompt yes or no and return true for valid entries and false for all other
    # entries. Valid entries are "yes" or "y" and are checked case insensitive.
    # All arguments are used to construct the prompt.
    yes_or_no() {
        read -er -p "$* [y/n]: " reply

        case "${reply,,}" in
        y | yes) return 0 ;;
        *) return 1 ;;
        esac
    }

    main() {
        input=$(dragon-drop --all --and-exit --target)

        if [[ -z "$input" ]]; then
            printf '%s\n' "no input provided" >&2
            exit 1
        fi

        input_basename="$(basename "$input")"
        filename="$(assure_filename)"

        curl "$input" -o "$filename"
    }

    main
}}
