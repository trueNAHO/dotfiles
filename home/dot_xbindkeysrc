# `xbindkeys` configuration file.

# The format of a command line is:
#    "command to start"
#       associated key

# A list of keys is in /usr/include/X11/keysym.h and in
# `/usr/include/X11/keysymdef.h`. The `XK_` prefix is not needed.

# List of modifier:
#   Release, Control, Shift, Mod1 (Alt), Mod2 (NumLock),
#   Mod3 (CapsLock), Mod4, Mod5 (Scroll).

# The release modifier is not a standard X modifier, but you can
# use it if you want to catch release events instead of press events

# To specify a key, you can use 'xbindkeys --key' or 'xbindkeys --multikey' and
# put one of the two lines in this file.

# By defaults, xbindkeys does not pay attention with the modifiers NumLock,
# CapsLock and ScrollLock. Uncomment the following lines to pay attention to
# them.
#keystate_numlock = enable
#keystate_capslock = enable
#keystate_scrolllock= enable

# Spawn `$TERM` terminal if `$TERM` is set. Otherwise try to spawn `xterm`.
# Send desktop notifications about errors.
"command="${TERM:-xterm}"; summary="xbindkeys: $command"; body="$($command 2>&1 > /dev/null)" || notify-send -u critical "$summary" "$body""
    Mod4 + Return

# Spawn `dmenu_run`, which pipes programs in `$PATH` into `dmenu`. Send desktop
# notifications about errors.
"command="dmenu_run -p 'Run'"; summary="xbindkeys: $command"; body="$($command 2>&1 > /dev/null)" || notify-send -u critical "$summary" "$body""
    Mod4 + r

# Toggle the mute status of the default sink.
"command="pactl set-sink-mute @DEFAULT_SINK@ toggle"; summary="xbindkeys: $command"; body="$($command 2>&1 > /dev/null)" || notify-send -u critical "$summary" "$body""
    Mod4+Shift + Left

# Increase the volume level of the default sink by 5 percent.
"command="pactl set-sink-volume @DEFAULT_SINK@ +5%"; summary="xbindkeys: $command"; body="$($command 2>&1 > /dev/null)" || notify-send -u critical "$summary" "$body""
    Mod4 + Right

# Set the volume level of the default sink to 100 percent.
"command="pactl set-sink-volume @DEFAULT_SINK@ 100%"; summary="xbindkeys: $command"; body="$($command 2>&1 > /dev/null)" || notify-send -u critical "$summary" "$body""
    Mod4+Shift + Right

# Spawn `passmenu`, which pipes `$PASSWORD_STORE_DIR` into `dmenu`. Send
# desktop notifications about errors.
"command="passmenu -p 'Pass'"; summary="xbindkeys: $command"; body="$($command 2>&1 > /dev/null)" || notify-send -u critical "$summary" "$body""
    Mod4 + p

# Suspend the system. Send desktop notifications about errors.
"command="systemctl suspend"; summary="xbindkeys: $command"; body="$($command 2>&1 > /dev/null)" || notify-send -u critical "$summary" "$body""
    Mod4 + s
