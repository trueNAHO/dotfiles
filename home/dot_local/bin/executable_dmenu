#!/usr/bin/env bash

# Workaround to make a config file for `dmenu` possible. Every non-commented
# line from the config file is used to build the final `dmenu` command. Note
# that arguments provided to this script overwrite the config file settings.

dmenu_config_file="${XDG_CONFIG_DIR:-$HOME/.config}/dmenu/dmenu.conf"

# Parse `$dmenu_config_file` and store the result in `$dmenu_flags`. Comments
# match the following regex: `^\s*#`. Any line optionally beginning with any
# amount of whitespace followed by a `#` (pound) is considered a commented line
# and is skipped entirely. Note that inline comments are therefore not possible
# with the current implementation. All fields in non-commented lines are output
# in a single line seperated by a space. Since the final command of this script
# is called with `bash`, this causes  inline comments in the config file to be
# seen as a inline comment for that `bash` command. Therefore any fields after
# the first inline comment will be ignored. The use of inline comments in the
# config file is strongly discouraged.
if [[ -f "$dmenu_config_file" ]]; then
  dmenu_flags="$(awk -v ORS=" " '! /^\s*#/' "$dmenu_config_file")"
fi

# Temporarily remove this script from `$PATH` to avoid infinite recursion when
# calling `dmenu`. Note that it will not be removed if it is the first element
# (on the right). In that case any onther path in `$PATH` has precedence. If
# `dmenu` is still not found then this script is the only `dmenu`. In that case
# the problem is not this script, but the system. Note that arguments provided
# to this script overwrite the config file settings.
(
  PATH="${PATH//$(cd "$(dirname "$0")" && pwd):}" \
      && bash -c "dmenu $dmenu_flags $*"
)
